pipeline {
    agent {
        kubernetes {
            label 'python'
            defaultContainer 'python'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: python
spec:
  containers:
  - name: python
    image: walkwayai/python:latest
    command:
    - cat
    tty: true
"""
        }
    }
    parameters {
        string(name: 'product_id', defaultValue: '73434P108', description: 'ID of the product (e.g. 9866P79, 73434P108, 156679P2, 73995P7, 70667P4)')
        choice(name: 'city', choices: ['same', 'any', 'different'], description: 'If same, only products from the same city are shown.')
        choice(name: 'supplier_code', choices: ['different', 'any', 'same'], description: 'If same, only products from the same supplier code are shown.')
        choice(name: 'rating', choices: ['any', 'similar', 'different'], description: 'If similar, only products with similar average ratings are shown.')
        choice(name: 'start_year', choices: ['2023', '2022', '2024'], description: 'Products older than this year will not be considered.')
        choice(name: 'embedding_model', choices: ['jina-embeddings-v2-base-en', 'mean', 'gte-large'], description: 'Embedding model.')
    }
    environment {
        LOG_FILE = 'experiment.log'
    }
    stages {
        stage('Experiment Results') {
            steps {
                container('python') {
                    script {
                        withCredentials([string(credentialsId: 'OPENAI_API_KEY', variable: 'OPENAI_API_KEY')]) {
                            sh """
                            python3 src/experiment_product_similarity.py \
                                -product_id ${params.product_id} \
                                -city_name ${params.city} \
                                -supplier_code ${params.supplier_code} \
                                -rating ${params.rating} \
                                -start_year ${params.start_year} \
                                -embedding_model ${params.embedding_model} \
                                -apikey ${OPENAI_API_KEY} | tee ${env.LOG_FILE}
                            """
                        }
                    }
                }
            }
        }
        stage('Write your feedback') {
            steps {
                script {
                    def feedbackMessage = """
                    Did the results show similar products to the original product?
                    Were results better with OpenAI?
                    """
                    def userFeedback = input message: feedbackMessage, parameters: [string(name: 'feedback', defaultValue: '', description: 'Your feedback')]
                    currentBuild.description = userFeedback
                }
            }
        }
        stage('Send Feedback') {
            steps {
                script {
                    def logs = readFile(env.LOG_FILE)
                    def emailBody = """
                        ${logs}

                        User Feedback:

                        ${currentBuild.description}
                    """
                    emailext(
                        attachLog: true, 
                        body: emailBody, 
                        subject: 'Experiment Feedback', 
                        to: 'fabio@walkway.ai'
                    )
                }
            }
        }
    }
}
