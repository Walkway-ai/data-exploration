pipeline {
    agent {
        kubernetes {
            label 'python'
            defaultContainer 'python'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: python
spec:
  containers:
  - name: python
    image: walkwayai/python:2.0
    command:
    - cat
    tty: true
"""
}
}
    parameters {
        string(name: 'product_id', defaultValue: '104357P6', description: 'ID of the product (e.g. 104357P6, 6462P29, 16168P1, 47475P7, 3267P8)')
        choice(name: 'city_name', choices: ['same', 'any'], description: 'If same, only products from the same city are shown.')
        choice(name: 'supplier_code', choices: ['different', 'any'], description: 'If different, only products from other suppliers are shown.')
        choice(name: 'average_rating', choices: ['any', 'similar'], description: 'If similar, only products with similar average ratings are shown.')
        choice(name: 'start_year', choices: ['any', '2022', '2023', '2024'], description: 'Products older than this year will not be considered.')
        choice(name: 'landmarks', choices: ['same', 'any'], description: 'If same, only products mentioning the same landmark(s) will be shown.')
        choice(name: 'prices', choices: ['standard', 'premium', 'any'], description: 'If not any, Only products with similar standard/premium price ranges will be shown.')
        choice(name: 'is_private', choices: ['any', 'same'], description: 'If same, only products with the same tour type (private/public) will be shown.')
        choice(name: 'categories', choices: ['same', 'any'], description: 'If same, only products with the same sub-category will be shown.')
        choice(name: 'embedding_model', choices: ['mean', 'jina-embeddings-v2-base-en', 'gte-large'], description: 'Embedding model.')
    }
    stages {
        stage('Experiment Results') {
            steps {
                container('python') {
                    script {
                        def customBuildNumber = params.product_id
                        currentBuild.displayName = "${customBuildNumber}"
                        withCredentials([string(credentialsId: 'OPENAI_API_KEY', variable: 'OPENAI_API_KEY')]) {
                            withCredentials([file(credentialsId: 'gcp_service_account_json', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                                sh """
                                python3 src/experiment_product_similarity.py \
                                    -credentials ${GOOGLE_APPLICATION_CREDENTIALS} \
                                    -product_id ${params.product_id} \
                                    -city_name ${params.city_name} \
                                    -supplier_code ${params.supplier_code} \
                                    -average_rating ${params.average_rating} \
                                    -start_year ${params.start_year} \
                                    -landmarks ${params.landmarks} \
                                    -prices ${params.prices} \
                                    -is_private ${params.is_private} \
                                    -categories ${params.categories} \
                                    -embedding_model ${params.embedding_model} \
                                    -apikey ${OPENAI_API_KEY} \
                                    -experiment_id ${customBuildNumber}
                                """
                            }
                        }
                    }
                }
            }
        }
    }
}