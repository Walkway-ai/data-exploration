pipeline {
    agent {
        kubernetes {
            label 'python'
            defaultContainer 'python'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: python
spec:
  containers:
  - name: python
    image: fabiocuri/python-walkway:latest
    command:
    - cat
    tty: true
"""
        }
    }
    parameters {
        string(name: 'product_id', defaultValue: '9866P79', description: 'ID of the product (e.g. 9866P79)')
        choice(name: 'city', choices: ['same', 'different'], description: 'If same, only products from the same city are shown.')
        choice(name: 'supplier_code', choices: ['different', 'same'], description: 'If same, only products from the same supplier code are shown.')
        choice(name: 'embedding_model', choices: ['jina-embeddings-v2-base-en', 'gte-large'], description: 'Embedding model')
    }
    environment {
        LOG_FILE = 'experiment.log'
        USER_FEEDBACK = ''
    }
    stages {
        stage('experiment-product-similarity') {
            steps {
                container('python') {
                    sh """
                    python3 src/experiment_product_similarity.py \
                        -product_id ${params.product_id} \
                        -city_name ${params.city} \
                        -supplier_code ${params.supplier_code} \
                        -embedding_model ${params.embedding_model} | tee ${env.LOG_FILE}
                    """
                }
            }
        }
        stage('ask-for-feedback') {
            steps {
                script {
                    env.USER_FEEDBACK = input message: 'Please provide your feedback', parameters: [string(name: 'feedback', defaultValue: '', description: 'Your feedback')]
                }
            }
        }
        stage('send-feedback-email') {
            steps {
                script {
                    def logs = readFile(env.LOG_FILE)
                    def emailBody = """
                        Experiment Logs:

                        ${logs}

                        User Feedback:

                        ${env.USER_FEEDBACK}
                    """
                    emailext(
                        attachLog: true, 
                        body: emailBody, 
                        subject: 'Experiment Feedback', 
                        to: 'fabio@walkway.ai'
                    )
                }
            }
        }
    }
}
